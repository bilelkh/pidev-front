@model IEnumerable<Pidev_front.Models.Book>

@{
    ViewBag.Title = "index";
}

<h2>Add New Book</h2>
<script>


    function exportData () {
        var raw = "";

        var requestOptions = {
            method: 'GET',
            body: raw,
            redirect: 'follow'
        };

        fetch("http://localhost:8080/export", { responseType: "blob" })
            .then(response => response.text())
            .then(result => { downloadFile(new Blob([result], { type: "application/pdf" }), "myfile.pdf") })
            .catch(error => console.log('error', error));
    }


    const downloadFile = (blob, fileName) => {
        const link = document.createElement('a');
        // create a blobURI pointing to our Blob
        link.href = URL.createObjectURL(blob);
        link.download = fileName;
        // some browser needs the anchor to be in the doc
        document.body.append(link);
        link.click();
        link.remove();
        // in case the Blob uses a lot of memory
        setTimeout(() => URL.revokeObjectURL(link.href), 7000);
    };


  
</script>
<p>
    @Html.ActionLink("Add New", "Create", null, new { @class = "btn btn-success  glyphicon-plus" })

    <button onclick="exportData()" class="btn btn-primary glyphicon glyphicon-circle-arrow-down">Export</button>
</p>
<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Isbn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SafetyStock)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Isbn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UpdatedAt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SafetyStock)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary glyphicon glyphicon-edit" }) 
            @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-default glyphicon glyphicon-info" })
            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger glyphicon glyphicon-trash" })
        </td>
    </tr>
}

</table>
